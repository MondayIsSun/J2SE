package designPatterns.strategyP;

/*
 * 超类，所有的鸭子都要继承此类
 * 抽象了鸭子的行为：显示和鸣叫
 */
public abstract class Duck {

	/*
	 * 鸭子发出叫声 通用行为，由超类实现
	 */
	public void quack() {
		System.out.println("嘎嘎嘎");
	}

	/*
	 * 显示鸭子的外观 鸭子的外观各不相同，声明为abstract， 由子类实现
	 */
	public abstract void display();

	// ------------------------------------------------

	// 在基类当中组合策略接口，注意此处是使用private关键字
	private FlyingStragety flyingStragety;

	// 同时给定set方法方便FlyingStragety的注入
	public void setFlyingStragety(FlyingStragety flyingStragety) {
		this.flyingStragety = flyingStragety;
	}

	// 同时给鸭子基类新增飞行能力
	public void fly() {
		flyingStragety.performFly();
	}

	// ------------------------------------------------

}
